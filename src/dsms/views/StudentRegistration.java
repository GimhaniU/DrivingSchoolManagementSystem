/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package dsms.views;

import dsms.common_classes.ComboItemsAdder;
import dsms.common_classes.PatternsChecker;
import dsms.common_classes.ReportConnector;
import dsms.controllers.*;
import dsms.models.*;
import java.awt.event.KeyEvent;
import java.io.InputStream;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author User
 */
public class StudentRegistration extends javax.swing.JInternalFrame {

    AddOldStudent addOldStudent;
    Registration registration = null;
    Double totalFee = null;
    DocumentSet docs = null;
    OldLicenseDetail oldLicensedetail = null;
    int fivePhotos = 1, medical = 1, nicPhotocopy = 1, bCertificate = 1, oldLicense = 0;
    public String rid, studentId, driLicNo, classes, dlIssueDate, dlExpiredate;
    int paymentPress = 0;
    Student student;
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

    public StudentRegistration() {
        initComponents();
        setTitle("Student registration");
        nameWithInitialsText.requestFocus();
        Date d = new Date();

        dateText.setText(sdf.format(d));

        notValidTelLabel.setVisible(false);
        notValidNicLabel.setVisible(false);
        // oldLicenceCheck.setEnabled(false);
        discountText.setText("0");
        sidText.setEditable(false);
        dateText.setEditable(false);
        totalFeeText.setEditable(false);
        try {
            ComboItemsAdder.addAllVehicleClass(classComboBox);
            ComboItemsAdder.getComingLectures(lectureDateCombo);
            ComboItemsAdder.addAllVehicleClass(classComboBox1);
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(this.getName()).log(Level.SEVERE, null, ex);
        }
        CodeGenerateController.getNextID(ridText, "R", "registrationId", "Registration");
        CodeGenerateController.getNextID(sidText, "S", "studentId", "Student");

        String cid = classComboBox.getSelectedItem().toString();
        // nameWithInitialsText.setRequestFocusEnabled(true);
        saveButton.setEnabled(false);
        printButton.setEnabled(false);
    }
public void requestFocusForm(){
    nameWithInitialsText.requestFocus();
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        nameWithInitialsLabel = new javax.swing.JLabel();
        nameWithInitialsText = new javax.swing.JTextField();
        surnameLabel = new javax.swing.JLabel();
        surnameText = new javax.swing.JTextField();
        telLabel = new javax.swing.JLabel();
        telText = new javax.swing.JTextField();
        addressLabel = new javax.swing.JLabel();
        nicLabel = new javax.swing.JLabel();
        nicText = new javax.swing.JTextField();
        genderLabel = new javax.swing.JLabel();
        maleRButton = new javax.swing.JRadioButton();
        femaleRButton = new javax.swing.JRadioButton();
        addressText = new javax.swing.JTextField();
        notValidTelLabel = new javax.swing.JLabel();
        notValidNicLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        classLabel = new javax.swing.JLabel();
        classComboBox = new javax.swing.JComboBox();
        instructorLabel = new javax.swing.JLabel();
        instructorComboBox = new javax.swing.JComboBox();
        totalFeeLabel = new javax.swing.JLabel();
        totalFeeText = new javax.swing.JTextField();
        discountText = new javax.swing.JTextField();
        discountLabel = new javax.swing.JLabel();
        oldLicensePanel = new javax.swing.JPanel();
        classLabel1 = new javax.swing.JLabel();
        classComboBox1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        driLicNoText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        dlIssueDateText = new com.toedter.calendar.JDateChooser();
        dlExpireDateText = new com.toedter.calendar.JDateChooser();
        classNameLabel = new javax.swing.JLabel();
        lectureDateCombo = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        saveButton = new javax.swing.JToggleButton();
        printButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        photoCheck = new javax.swing.JCheckBox();
        medicalCheck = new javax.swing.JCheckBox();
        nicPhotocopyCheck = new javax.swing.JCheckBox();
        birthCertiCheck = new javax.swing.JCheckBox();
        oldLicenceCheck = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        sidLabel = new javax.swing.JLabel();
        sidText = new javax.swing.JTextField();
        addOldStudentButton = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        registerLabel = new javax.swing.JLabel();
        ridText = new javax.swing.JTextField();
        dateLabel = new javax.swing.JLabel();
        dateText = new javax.swing.JTextField();

        jPanel4.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), javax.swing.BorderFactory.createTitledBorder(null, "Personal Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Narrow", 1, 14), new java.awt.Color(0, 0, 204)))); // NOI18N
        jPanel4.setFocusTraversalPolicyProvider(true);
        jPanel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jPanel4.setInheritsPopupMenu(true);

        nameWithInitialsLabel.setText("Name with initials:");

        nameWithInitialsText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameWithInitialsTextActionPerformed(evt);
            }
        });
        nameWithInitialsText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameWithInitialsTextKeyReleased(evt);
            }
        });

        surnameLabel.setText("Surname:");

        surnameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                surnameTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                surnameTextKeyReleased(evt);
            }
        });

        telLabel.setText("Telephone:");

        telText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                telTextActionPerformed(evt);
            }
        });
        telText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                telTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                telTextKeyReleased(evt);
            }
        });

        addressLabel.setText("Address:");

        nicLabel.setText("NIC no:");

        nicText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nicTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nicTextKeyReleased(evt);
            }
        });

        genderLabel.setText("Gender:");

        buttonGroup1.add(maleRButton);
        maleRButton.setText("Male");
        maleRButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleRButtonActionPerformed(evt);
            }
        });
        maleRButton.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                maleRButtonPropertyChange(evt);
            }
        });
        maleRButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                maleRButtonKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                maleRButtonKeyReleased(evt);
            }
        });

        buttonGroup1.add(femaleRButton);
        femaleRButton.setText("Female");
        femaleRButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                femaleRButtonStateChanged(evt);
            }
        });
        femaleRButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                femaleRButtonKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                femaleRButtonKeyReleased(evt);
            }
        });

        addressText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressTextActionPerformed(evt);
            }
        });
        addressText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addressTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                addressTextKeyReleased(evt);
            }
        });

        notValidTelLabel.setForeground(new java.awt.Color(255, 0, 0));
        notValidTelLabel.setText("Not a valid number!");

        notValidNicLabel.setForeground(new java.awt.Color(255, 0, 0));
        notValidNicLabel.setText("Not a valid NIC number!");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameWithInitialsLabel)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(genderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nicLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(telLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addressLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(surnameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(maleRButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(femaleRButton))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addressText, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(nicText, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(notValidNicLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(nameWithInitialsText, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(telText, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(notValidTelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(surnameText, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameWithInitialsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameWithInitialsLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(surnameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(surnameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(telText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(telLabel)
                    .addComponent(notValidTelLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addressLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nicLabel)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nicText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(notValidNicLabel)))
                .addGap(6, 6, 6)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maleRButton)
                    .addComponent(femaleRButton)
                    .addComponent(genderLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), javax.swing.BorderFactory.createTitledBorder(null, "Vehicle Class Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Narrow", 1, 12), new java.awt.Color(0, 0, 204)))); // NOI18N

        classLabel.setText("Vehicle classes");

        classComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classComboBoxActionPerformed(evt);
            }
        });
        classComboBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                classComboBoxKeyReleased(evt);
            }
        });

        instructorLabel.setText("Instructor:");

        instructorComboBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                instructorComboBoxKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                instructorComboBoxKeyReleased(evt);
            }
        });

        totalFeeLabel.setText("Total Fee:");

        totalFeeText.setEditable(false);

        discountText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                discountTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                discountTextKeyReleased(evt);
            }
        });

        discountLabel.setText("Discount:");

        oldLicensePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Old License Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Comic Sans MS", 1, 12), new java.awt.Color(0, 51, 204))); // NOI18N

        classLabel1.setText("Vehicle classes");

        classComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classComboBox1ActionPerformed(evt);
            }
        });
        classComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                classComboBox1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                classComboBox1KeyReleased(evt);
            }
        });

        jLabel1.setText("Driving License No:");

        driLicNoText.setAutoscrolls(false);
        driLicNoText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                driLicNoTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                driLicNoTextKeyReleased(evt);
            }
        });

        jLabel3.setText(" Issued date:");

        jLabel6.setText(" Expire date:");

        dlIssueDateText.setDateFormatString("yyyy-MM-dd");
        dlIssueDateText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dlIssueDateTextMouseClicked(evt);
            }
        });
        dlIssueDateText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dlIssueDateTextFocusGained(evt);
            }
        });
        dlIssueDateText.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dlIssueDateTextPropertyChange(evt);
            }
        });
        dlIssueDateText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dlIssueDateTextKeyReleased(evt);
            }
        });

        dlExpireDateText.setDateFormatString("yyyyy-MM-dd");
        dlExpireDateText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dlExpireDateTextKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout oldLicensePanelLayout = new javax.swing.GroupLayout(oldLicensePanel);
        oldLicensePanel.setLayout(oldLicensePanelLayout);
        oldLicensePanelLayout.setHorizontalGroup(
            oldLicensePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(oldLicensePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(oldLicensePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(classLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(oldLicensePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(driLicNoText, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(classComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(oldLicensePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(dlIssueDateText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dlExpireDateText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        oldLicensePanelLayout.setVerticalGroup(
            oldLicensePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(oldLicensePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(oldLicensePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(driLicNoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(oldLicensePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(dlIssueDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(oldLicensePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(dlExpireDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(oldLicensePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(classLabel1)
                    .addComponent(classComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        classNameLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lectureDateCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lectureDateComboKeyReleased(evt);
            }
        });

        jLabel2.setText("Lecture Date:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lectureDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(classLabel)
                            .addComponent(totalFeeLabel)
                            .addComponent(discountLabel)
                            .addComponent(instructorLabel))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(instructorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totalFeeText, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(discountText, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(classNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(classComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(oldLicensePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(classLabel)
                    .addComponent(classComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(classNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(instructorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(instructorLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalFeeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalFeeLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(discountText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(discountLabel))
                .addGap(18, 18, 18)
                .addComponent(oldLicensePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lectureDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 5, 0);
        flowLayout1.setAlignOnBaseline(true);
        jPanel5.setLayout(flowLayout1);

        saveButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dsms/icons/24x24/Save.png"))); // NOI18N
        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        saveButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                saveButtonKeyPressed(evt);
            }
        });
        jPanel5.add(saveButton);

        printButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        printButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dsms/icons/printer_add.png"))); // NOI18N
        printButton.setText("Print ");
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });
        jPanel5.add(printButton);

        exitButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        exitButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dsms/icons/24x24/Erase.png"))); // NOI18N
        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        jPanel5.add(exitButton);

        jPanel6.setBorder(javax.swing.BorderFactory.createCompoundBorder(null, javax.swing.BorderFactory.createTitledBorder(null, "Mark Documents", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Narrow", 1, 12), new java.awt.Color(0, 0, 255)))); // NOI18N

        photoCheck.setSelected(true);
        photoCheck.setText("5 passport size photos");
        photoCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                photoCheckActionPerformed(evt);
            }
        });
        photoCheck.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                photoCheckKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                photoCheckKeyReleased(evt);
            }
        });

        medicalCheck.setSelected(true);
        medicalCheck.setText("Medical Report taken from a MBBS doctor");
        medicalCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medicalCheckActionPerformed(evt);
            }
        });
        medicalCheck.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                medicalCheckKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                medicalCheckKeyReleased(evt);
            }
        });

        nicPhotocopyCheck.setSelected(true);
        nicPhotocopyCheck.setText("NIC photocopy signed by GramaNiladari");
        nicPhotocopyCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nicPhotocopyCheckActionPerformed(evt);
            }
        });
        nicPhotocopyCheck.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nicPhotocopyCheckKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nicPhotocopyCheckKeyReleased(evt);
            }
        });

        birthCertiCheck.setSelected(true);
        birthCertiCheck.setText("BirthCertificate signed by GramaNiladari");
        birthCertiCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                birthCertiCheckActionPerformed(evt);
            }
        });
        birthCertiCheck.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                birthCertiCheckKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                birthCertiCheckKeyReleased(evt);
            }
        });

        oldLicenceCheck.setText("Photocopy of Old Licence");
        oldLicenceCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oldLicenceCheckActionPerformed(evt);
            }
        });
        oldLicenceCheck.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                oldLicenceCheckKeyReleased(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dsms/icons/iCandy_Junior 001.png"))); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(oldLicenceCheck)
                    .addComponent(birthCertiCheck)
                    .addComponent(medicalCheck)
                    .addComponent(photoCheck)
                    .addComponent(nicPhotocopyCheck))
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 127, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(photoCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(medicalCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nicPhotocopyCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(birthCertiCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(oldLicenceCheck))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        sidLabel.setText("Student ID  :");

        sidText.setEditable(false);

        addOldStudentButton.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        addOldStudentButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dsms/icons/16x16/Add.png"))); // NOI18N
        addOldStudentButton.setText("Add Old Student");
        addOldStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addOldStudentButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sidLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sidText, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(addOldStudentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sidLabel)
                    .addComponent(sidText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(addOldStudentButton))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        registerLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        registerLabel.setText("Registration No:");

        ridText.setEditable(false);

        dateLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        dateLabel.setText("Date :");

        dateText.setEditable(false);
        dateText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(registerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ridText, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 263, Short.MAX_VALUE)
                .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dateText, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registerLabel)
                    .addComponent(ridText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateLabel)
                    .addComponent(dateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(99, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dateTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateTextActionPerformed

    private void surnameTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_surnameTextKeyPressed
    }//GEN-LAST:event_surnameTextKeyPressed

    private void telTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_telTextKeyPressed
    }//GEN-LAST:event_telTextKeyPressed

    private void nicTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nicTextKeyPressed
//        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
//            int res = PatternsChecker.checkNIC(nicText.getText());
//            if (res == 1) {
//                maleRButton.requestFocus();
//                maleRButton.setSelected(true);
//            } else {
//                JOptionPane.showMessageDialog(StudentRegistration.this, "Illegal NIC no.!");
//                nicText.setText(null);
//            }
//        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
//            maleRButton.requestFocus();
//            maleRButton.setSelected(true);
//            
//        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
//            surnameText.requestFocus();
//        }
    }//GEN-LAST:event_nicTextKeyPressed
    int x = 0, y = 0, z = 0;
    private void maleRButtonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_maleRButtonKeyReleased

        // if (z>0) {
        if (evt.getKeyCode() == 10) {
            //x++;
            //surnameText.requestFocus();
            // maleRButton.setSelected(true);
            classComboBox.requestFocus();
            System.out.println("male enter");
            //if (x > 1) {

            //  classComboBox.requestFocus();
            //}
        } else if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            femaleRButton.requestFocus();
            femaleRButton.setSelected(true);
            // maleRButton.setSelected(false);

        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            addressText.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            //y++;
            //maleRButton.requestFocus();
            //maleRButton.setSelected(true);
            //if (y > 1) {

            classComboBox.requestFocus();
            //}
            // classComboBox.requestFocus();
        }
        //}
        //z++;
    }//GEN-LAST:event_maleRButtonKeyReleased

    private void addressTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressTextActionPerformed
    }//GEN-LAST:event_addressTextActionPerformed

    private void addressTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addressTextKeyPressed
    }//GEN-LAST:event_addressTextKeyPressed

    private void classComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classComboBoxActionPerformed
        try {
            if (classComboBox.getSelectedItem() != null) {
                String classType = classComboBox.getSelectedItem().toString();
                VehicleClassSet vcs = VehicleClassController.searchVehicleClassSetByName(classType);
                String cid = vcs.getClassId();
                ComboItemsAdder.addInstructorsOfVehicleClass(instructorComboBox, cid);
                totalFee = Double.valueOf(vcs.getExamFee() + vcs.getStampTax() + vcs.getTrainingFee() + vcs.getTrialFee());
                totalFeeText.setText(totalFee.toString());
                classNameLabel.setText(vcs.getDescription());
                //classComboBox1.requestFocus();
//                if (classComboBox.getSelectedItem().toString().equals("D")) {
//                    oldLicensePanel.setEnabled(true);
//                    oldLicenceCheck.setEnabled(true);

//                } else {
//                    oldLicensePanel.setEnabled(false);
//                    oldLicenceCheck.setEnabled(false);
//                }
            }
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(this.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_classComboBoxActionPerformed

    private void classComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classComboBox1ActionPerformed
        classes = classComboBox1.getSelectedItem().toString();

    }//GEN-LAST:event_classComboBox1ActionPerformed

    private void driLicNoTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_driLicNoTextKeyPressed
    }//GEN-LAST:event_driLicNoTextKeyPressed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        getStudentDetails();
          saveButton.setEnabled(false);
            printButton.setEnabled(false);
    }//GEN-LAST:event_saveButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        this.dispose();

    }//GEN-LAST:event_exitButtonActionPerformed

    private void photoCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_photoCheckActionPerformed
        if (photoCheck.isSelected() == true) {
            fivePhotos = 1;
        } else {
            fivePhotos = 0;
        }
        medicalCheck.requestFocus();
    }//GEN-LAST:event_photoCheckActionPerformed

    private void medicalCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medicalCheckActionPerformed
        if (medicalCheck.isSelected() == true) {
            medical = 1;
        } else {
            medical = 0;
        }
        nicPhotocopyCheck.requestFocus();
    }//GEN-LAST:event_medicalCheckActionPerformed

    private void nicPhotocopyCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nicPhotocopyCheckActionPerformed
        if (nicPhotocopyCheck.isSelected() == true) {
            nicPhotocopy = 1;
        } else {
            nicPhotocopy = 0;
        }
        birthCertiCheck.requestFocus();
    }//GEN-LAST:event_nicPhotocopyCheckActionPerformed

    private void birthCertiCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_birthCertiCheckActionPerformed
        if (birthCertiCheck.isSelected() == true) {
            bCertificate = 1;
        } else {
            bCertificate = 0;
        }
//        if (classComboBox.getSelectedItem().toString().equals("D")) {
        oldLicenceCheck.requestFocus();
//        } else {
//            saveButton.doClick();
//        }
    }//GEN-LAST:event_birthCertiCheckActionPerformed
    public void getStudentDetails() {

        studentId = sidText.getText();
        rid = ridText.getText();
        driLicNo = driLicNoText.getText();


        String classType = classComboBox.getSelectedItem().toString();
        VehicleClassSet vehicleClassSet;
        String cid = null;
        try {
            vehicleClassSet = VehicleClassController.searchVehicleClassSetByName(classType);
            cid = vehicleClassSet.getClassId();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(this.getName()).log(Level.SEVERE, null, ex);
        }


        String instructorName = instructorComboBox.getSelectedItem().toString();
        Instructor instructor;
        String iid = null;
        try {
            instructor = InstructorController.searchInstructorByName(instructorName);
            iid = instructor.getInstructorId();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(this.getName()).log(Level.SEVERE, null, ex);
        }


        String date = dateText.getText();
        double discount = Double.parseDouble(discountText.getText());

        String nameWithInitials = nameWithInitialsText.getText();
        String surName = surnameText.getText();
        String address = addressText.getText();
        String nic = nicText.getText();
        String lectureDate = lectureDateCombo.getSelectedItem().toString();
        String gender;
        if (buttonGroup1.getSelection() == maleRButton.getModel()) {
            gender = "male";
        } else {
            gender = "female";
        }
        String tel = (telText.getText());
        int status = 1;
        student = new Student(studentId, nameWithInitials, surName, address, nic, tel, gender);
        registration = new Registration(rid, studentId, cid, iid, date, discount, totalFee, lectureDate, status);
        docs = new DocumentSet(rid, fivePhotos, medical, nicPhotocopy, bCertificate, oldLicense);
        //SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        if (dlIssueDateText.getDate() != null) {
            dlIssueDate = sdf.format(dlIssueDateText.getDate());
        }
        if (dlExpireDateText.getDate() != null) {
            dlExpiredate = sdf.format(dlExpireDateText.getDate());
        }
        oldLicensedetail = new OldLicenseDetail(studentId, driLicNo, dlIssueDate, dlExpiredate, classes);
        registration.setOldLicensedetail(oldLicensedetail);
        registration.setDocs(docs);
        student.setRegistration(registration);


        int result;
        try {
            if (StudentController.isAStudent(student.getStudentId())) {
                result = RegistrationController.addNewRegistration(registration);
            } else {
                result = StudentController.addNewStudent(student);
            }
            if (result > 0) {
                new RegistrationPayment(StudentRegistration.this, true, ridText.getText()).setVisible(true);
            } else {
                JOptionPane.showMessageDialog(StudentRegistration.this, "Registration Failed!");
            }
        } catch (SQLException ex) {
            Logger.getLogger(StudentRegistration.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(this.getName()).log(Level.SEVERE, null, ex);
        }

    }
    private void oldLicenceCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oldLicenceCheckActionPerformed
        if (oldLicenceCheck.isSelected() == true) {
            oldLicense = 1;
        } else {
            oldLicense = 0;
        }

        driLicNoText.requestFocus();

    }//GEN-LAST:event_oldLicenceCheckActionPerformed

    private void femaleRButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_femaleRButtonKeyPressed
    }//GEN-LAST:event_femaleRButtonKeyPressed

    private void maleRButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleRButtonActionPerformed
    }//GEN-LAST:event_maleRButtonActionPerformed

    private void nameWithInitialsTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameWithInitialsTextActionPerformed
    }//GEN-LAST:event_nameWithInitialsTextActionPerformed

    private void maleRButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_maleRButtonKeyPressed
    }//GEN-LAST:event_maleRButtonKeyPressed

    private void femaleRButtonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_femaleRButtonKeyReleased
        if (evt.getKeyCode() == 10) {
            // femaleRButton.requestFocus();

            //femaleRButton.setSelected(true);
            //System.out.println("enter");
            // maleRButton.setSelected(false);
            classComboBox.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            System.out.println("left");
            //femaleRButton.setSelected(false);
            maleRButton.requestFocus();
            maleRButton.setSelected(true);
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            System.out.println("up");
            addressText.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            System.out.println("down");
            classComboBox.requestFocus();
            //femaleRButton.setSelected(true);
        }
    }//GEN-LAST:event_femaleRButtonKeyReleased

    private void classComboBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_classComboBoxKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            instructorComboBox.requestFocus();
        }//else if (evt.getKeyCode() == KeyEvent.VK_UP) {
//            classComboBox.requestFocus();
//        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
//            discountText.requestFocus();
//        }
    }//GEN-LAST:event_classComboBoxKeyReleased

    private void discountTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountTextKeyReleased
        String newText = PatternsChecker.checkDecimal(discountText.getText());
        discountText.setText(newText);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
           discountText.setText(PatternsChecker.checkPrice(discountText.getText()));
            photoCheck.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            instructorComboBox.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            photoCheck.requestFocus();
        }
        enableSave();
    }//GEN-LAST:event_discountTextKeyReleased

    private void photoCheckKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_photoCheckKeyPressed
       
    }//GEN-LAST:event_photoCheckKeyPressed

    private void instructorComboBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_instructorComboBoxKeyPressed
    }//GEN-LAST:event_instructorComboBoxKeyPressed

    private void medicalCheckKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_medicalCheckKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (medicalCheck.isSelected() == true) {
                medicalCheck.setSelected(false);
                medical = 1;
            } else {
                medicalCheck.setSelected(true);
                medical = 0;
            }

        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            photoCheck.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            nicPhotocopyCheck.requestFocus();
        }
    }//GEN-LAST:event_medicalCheckKeyReleased

    private void nicPhotocopyCheckKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nicPhotocopyCheckKeyPressed
     
    }//GEN-LAST:event_nicPhotocopyCheckKeyPressed

    private void birthCertiCheckKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_birthCertiCheckKeyPressed
       
    }//GEN-LAST:event_birthCertiCheckKeyPressed

    private void instructorComboBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_instructorComboBoxKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            discountText.requestFocus();
        }
    }//GEN-LAST:event_instructorComboBoxKeyReleased

    private void medicalCheckKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_medicalCheckKeyPressed
        
    }//GEN-LAST:event_medicalCheckKeyPressed

    private void saveButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_saveButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            saveButton.doClick();
        }
    }//GEN-LAST:event_saveButtonKeyPressed
    int disPress = 0;
    private void discountTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountTextKeyPressed
        if (evt.getKeyCode() != KeyEvent.VK_ENTER) {
            disPress++;
            if (disPress == 1) {
                discountText.setText(null);
            }
        }
    }//GEN-LAST:event_discountTextKeyPressed

    private void dlIssueDateTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dlIssueDateTextMouseClicked
    }//GEN-LAST:event_dlIssueDateTextMouseClicked

    private void dlIssueDateTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dlIssueDateTextFocusGained
    }//GEN-LAST:event_dlIssueDateTextFocusGained
    public void setNullText() {
        Date d = new Date();
        //  SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        dateText.setText(sdf.format(d));

        nameWithInitialsText.setText(null);
        surnameText.setText(null);
        addressText.setText(null);
        nicText.setText(null);
        telText.setText(null);

        oldLicenceCheck.setVisible(false);
        discountText.setText("0");
        sidText.setEditable(false);
        dateText.setEditable(false);
        totalFeeText.setEditable(false);
        buttonGroup1.clearSelection();

        driLicNoText.setText(null);
        dlIssueDateText.setDate(null);
        dlExpireDateText.setDate(null);
        try {
            ComboItemsAdder.addAllVehicleClass(classComboBox);
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(StudentRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }

       
        CodeGenerateController.getNextID(ridText, "R", "registrationId", "Registration");
        CodeGenerateController.getNextID(sidText, "S", "studentId", "Student");
        String classId = classComboBox.getSelectedItem().toString();
        nameWithInitialsText.setRequestFocusEnabled(true);
    }
    private void addOldStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOldStudentButtonActionPerformed
        addOldStudent = new AddOldStudent(this, true);
        addOldStudent.setVisible(true);

    }//GEN-LAST:event_addOldStudentButtonActionPerformed
    public void getOldStudentId() throws ClassNotFoundException, SQLException {
        studentId = addOldStudent.getText();
        sidText.setText(studentId);
        student = StudentController.searchStudent(studentId);
        nameWithInitialsText.setText(student.getNameWithInitials());
        surnameText.setText(student.getSurName());
        addressText.setText(student.getAddress());
        nicText.setText(student.getNic());
        telText.setText(student.getStudentTel());
        String gender = student.getGender();
        switch (gender) {
            case "male":
                maleRButton.setSelected(true);
                break;
            case "female":
                femaleRButton.setSelected(true);
                break;
        }
        classComboBox.requestFocus();
    }
    private void femaleRButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_femaleRButtonStateChanged
    }//GEN-LAST:event_femaleRButtonStateChanged

    private void maleRButtonPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_maleRButtonPropertyChange
        //  femaleRButton.setSelected(true);
    }//GEN-LAST:event_maleRButtonPropertyChange

    private void nicTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nicTextKeyReleased
        notValidNicLabel.setVisible(false);
        String newText = PatternsChecker.checkNIC(nicText.getText());
        nicText.setText(newText);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (nicText.getText().length() == 10) {
                maleRButton.requestFocus();
                maleRButton.setSelected(true);
            } else {
                notValidNicLabel.setVisible(true);
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            maleRButton.requestFocus();
            maleRButton.setSelected(true);
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            surnameText.requestFocus();
        }
        enableSave();
    }//GEN-LAST:event_nicTextKeyReleased

    private void telTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_telTextKeyReleased
        notValidTelLabel.setVisible(false);
        String newText = PatternsChecker.checkTelNum(telText.getText());
        telText.setText(newText);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (telText.getText().length() == 10) {

                addressText.requestFocus();
            } else {
                notValidTelLabel.setVisible(true);
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            addressText.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            surnameText.requestFocus();
        }
        enableSave();
    }//GEN-LAST:event_telTextKeyReleased

    private void addressTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addressTextKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            nicText.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            telText.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            nicText.requestFocus();
        }
        enableSave();
    }//GEN-LAST:event_addressTextKeyReleased

    private void surnameTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_surnameTextKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            telText.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            telText.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            nameWithInitialsText.requestFocus();
        }
        enableSave();
    }//GEN-LAST:event_surnameTextKeyReleased

    private void nameWithInitialsTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameWithInitialsTextKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            surnameText.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            surnameText.requestFocus();
        }
        enableSave();
    }//GEN-LAST:event_nameWithInitialsTextKeyReleased
    private void enableSave() {
        if ((nameWithInitialsText.getText().length() > 0)
                && (addressText.getText().length() > 0)
                && (telText.getText().length() > 0)
                && (nicText.getText().length() > 0) // & buttonGroup1.getSelection()!=null
                ) {
            saveButton.setEnabled(true);
            printButton.setEnabled(true);
        } else if ((nameWithInitialsText.getText().length() == 0)
                && (addressText.getText().length() == 0)
                && (telText.getText().length() == 0)
                && (nicText.getText().length() == 0) // & buttonGroup1.getSelection()!=null
                ) {
            saveButton.setEnabled(false);
            printButton.setEnabled(false);
        }
    }
    private void oldLicenceCheckKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_oldLicenceCheckKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            driLicNoText.requestFocus();
        }
    }//GEN-LAST:event_oldLicenceCheckKeyReleased

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        try {
            InputStream inputStream = getClass().getResourceAsStream("/dsms/reports/student_detail_reports/studentDetailReport.jrxml");
            HashMap map = new HashMap();
            map.put("registration_id", ridText.getText());
            map.put("student_id", sidText.getText());
            map.put("name_with_initials", nameWithInitialsText.getText());
            map.put("surname", surnameText.getText());
            map.put("telephone", telText.getText());
            map.put("address", addressText.getText());
            map.put("nic_no", nicText.getText());
            String gender;
            if (buttonGroup1.getSelection() == maleRButton.getModel()) {
                gender = "male";
            } else {
                gender = "female";
            }
            map.put("gender", gender);
            map.put("vehicle_class", classComboBox.getSelectedItem().toString());
            map.put("instructor", instructorComboBox.getSelectedItem().toString());
            map.put("total_fee", totalFeeText.getText());
            map.put("discount", discountText.getText());
            map.put("lecture_date", lectureDateCombo.getSelectedItem().toString());
            map.put("license_number", driLicNoText.getText());
            map.put("date_of_issue", sdf.format(dlIssueDateText.getDate()));
            map.put("date_of_expire", sdf.format(dlExpireDateText.getDate()));
            map.put("old_vehicle_license_class", classComboBox1.getSelectedItem().toString());

            JasperViewer jv = ReportConnector.sendHashMap(inputStream, map);
            ReportConnector.viewInDialog(jv);
        } catch (ClassNotFoundException | SQLException | JRException ex) {
            Logger.getLogger(StudentRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_printButtonActionPerformed

    private void driLicNoTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_driLicNoTextKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            dlIssueDateText.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            discountText.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            dlIssueDateText.requestFocus();
        }

    }//GEN-LAST:event_driLicNoTextKeyReleased

    private void dlIssueDateTextPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dlIssueDateTextPropertyChange
        dlExpireDateText.requestFocus();
        System.out.println("abc");
        try {
            if (classComboBox.getSelectedItem().toString().equals("D")) {
                String issueDate = sdf.format(dlIssueDateText.getDate());
                int licenseVal = OldLicenseDetailController.checkLicenseValidity(issueDate);
                if (licenseVal == 0) {
                    JOptionPane.showMessageDialog(this, "Your license is not illegible for class D registration");
                    setNullText();
                }
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(StudentRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_dlIssueDateTextPropertyChange

    private void dlIssueDateTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dlIssueDateTextKeyReleased
      if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            dlExpireDateText.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            driLicNoText.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            dlExpireDateText.requestFocus();
        }
    }//GEN-LAST:event_dlIssueDateTextKeyReleased

    private void dlExpireDateTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dlExpireDateTextKeyReleased
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            classComboBox1.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            dlIssueDateText.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            dlIssueDateText.requestFocus();
        }
    }//GEN-LAST:event_dlExpireDateTextKeyReleased

    private void photoCheckKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_photoCheckKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (photoCheck.isSelected() == true) {
                photoCheck.setSelected(false);
                fivePhotos = 1;
            } else {
                photoCheck.setSelected(true);
                fivePhotos = 0;
            }

        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            discountText.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            medicalCheck.requestFocus();
        }
    }//GEN-LAST:event_photoCheckKeyReleased

    private void nicPhotocopyCheckKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nicPhotocopyCheckKeyReleased
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (nicPhotocopyCheck.isSelected() == true) {
                nicPhotocopyCheck.setSelected(false);
                nicPhotocopy = 1;
            } else {
                nicPhotocopyCheck.setSelected(true);
                nicPhotocopy = 0;
            }

        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            medicalCheck.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            birthCertiCheck.requestFocus();
        }
    }//GEN-LAST:event_nicPhotocopyCheckKeyReleased

    private void birthCertiCheckKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_birthCertiCheckKeyReleased
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        
  
            if (birthCertiCheck.isSelected() == true) {
                birthCertiCheck.setSelected(false);
                bCertificate = 1;
            } else {
                birthCertiCheck.setSelected(true);
                bCertificate = 0;
            }

        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            nicPhotocopyCheck.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            if (birthCertiCheck.isSelected() == true) {
                birthCertiCheck.setSelected(false);
                bCertificate = 1;
            } else {
                birthCertiCheck.setSelected(true);
                bCertificate = 0;
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {         
                oldLicenceCheck.requestFocus();
        }
    }//GEN-LAST:event_birthCertiCheckKeyReleased

    private void classComboBox1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_classComboBox1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_classComboBox1KeyReleased

    private void classComboBox1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_classComboBox1KeyPressed
      if(evt.getKeyCode()==KeyEvent.VK_ENTER){
          lectureDateCombo.requestFocus();
      }
    }//GEN-LAST:event_classComboBox1KeyPressed

    private void lectureDateComboKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lectureDateComboKeyReleased
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
          saveButton.doClick();
      }
    }//GEN-LAST:event_lectureDateComboKeyReleased

    private void telTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_telTextActionPerformed
        notValidTelLabel.setVisible(false);
        String newText = PatternsChecker.checkTelNum(telText.getText());
        telText.setText(newText);
      
       // enableSave();
    }//GEN-LAST:event_telTextActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addOldStudentButton;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JTextField addressText;
    private javax.swing.JCheckBox birthCertiCheck;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox classComboBox;
    private javax.swing.JComboBox classComboBox1;
    private javax.swing.JLabel classLabel;
    private javax.swing.JLabel classLabel1;
    private javax.swing.JLabel classNameLabel;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JTextField dateText;
    private javax.swing.JLabel discountLabel;
    private javax.swing.JTextField discountText;
    private com.toedter.calendar.JDateChooser dlExpireDateText;
    private com.toedter.calendar.JDateChooser dlIssueDateText;
    private javax.swing.JTextField driLicNoText;
    private javax.swing.JButton exitButton;
    private javax.swing.JRadioButton femaleRButton;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JComboBox instructorComboBox;
    private javax.swing.JLabel instructorLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JComboBox lectureDateCombo;
    private javax.swing.JRadioButton maleRButton;
    private javax.swing.JCheckBox medicalCheck;
    private javax.swing.JLabel nameWithInitialsLabel;
    private javax.swing.JTextField nameWithInitialsText;
    private javax.swing.JLabel nicLabel;
    private javax.swing.JCheckBox nicPhotocopyCheck;
    private javax.swing.JTextField nicText;
    private javax.swing.JLabel notValidNicLabel;
    private javax.swing.JLabel notValidTelLabel;
    private javax.swing.JCheckBox oldLicenceCheck;
    private javax.swing.JPanel oldLicensePanel;
    private javax.swing.JCheckBox photoCheck;
    private javax.swing.JButton printButton;
    private javax.swing.JLabel registerLabel;
    public javax.swing.JTextField ridText;
    private javax.swing.JToggleButton saveButton;
    private javax.swing.JLabel sidLabel;
    public javax.swing.JTextField sidText;
    private javax.swing.JLabel surnameLabel;
    private javax.swing.JTextField surnameText;
    private javax.swing.JLabel telLabel;
    private javax.swing.JTextField telText;
    private javax.swing.JLabel totalFeeLabel;
    private javax.swing.JTextField totalFeeText;
    // End of variables declaration//GEN-END:variables
}
